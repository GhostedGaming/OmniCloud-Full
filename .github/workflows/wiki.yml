name: Generate and Publish Rust Documentation

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetches git submodules

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Generate Documentation
        run: |
          # Create combined documentation for the main crate and all workspace members
          cargo doc --no-deps --document-private-items --workspace
          
          # Create an index.html that redirects to the main crate documentation
          MAIN_CRATE=$(grep -m 1 "name" Cargo.toml | head -1 | cut -d '"' -f 2 || echo "")
          
          if [ -z "$MAIN_CRATE" ]; then
            # If we couldn't find the main crate name, use the directory name
            MAIN_CRATE=$(basename $(pwd) | tr '-' '_')
          fi
          
          # Create a proper index.html that doesn't cause nested redirects
          echo "<meta http-equiv=\"refresh\" content=\"0; url=$MAIN_CRATE/index.html\">" > target/doc/index.html
          
          # Create a .nojekyll file to prevent GitHub Pages from ignoring files that begin with an underscore
          touch target/doc/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './target/doc'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
