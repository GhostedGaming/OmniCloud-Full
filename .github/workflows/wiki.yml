name: Generate GitHub Wiki

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'notes/**'
      - 'Docs/**'
      - 'Notes/**'
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Clone Wiki Repository
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git clone "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: Generate Wiki Index
        run: |
          # Create the Home.md file
          echo "# Wiki Index" > wiki/Home.md
          echo "" >> wiki/Home.md
          echo "*This wiki is auto-generated from repository markdown files*" >> wiki/Home.md
          echo "" >> wiki/Home.md
          
          # Count directories and files
          dir_count=0
          file_count=0
          
          # Process each potential directory
          for source_dir in docs notes Docs Notes; do
            if [ ! -d "$source_dir" ]; then
              continue
            fi
            
            echo "Processing directory: $source_dir"
            ((dir_count++))
            
            # Add section header to Home.md
            echo "## ${source_dir^}" >> wiki/Home.md
            echo "" >> wiki/Home.md
            
            # Process markdown files directly in this directory
            for md_file in "$source_dir"/*.md; do
              # Check if the glob expanded to an actual file
              if [ ! -f "$md_file" ]; then
                continue
              fi
              
              filename=$(basename "$md_file")
              # Skip files starting with underscore or dot
              if [[ "$filename" == _* || "$filename" == .* ]]; then
                continue
              fi
              
              echo "Processing root file: $md_file"
              
              # Try to extract title from first heading
              title=$(grep -m 1 "^# " "$md_file" | sed 's/^# //')
              # If no title found, use filename
              if [ -z "$title" ]; then
                title=$(basename "$md_file" .md | tr '-_' ' ' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2))}1')
              fi
              
              # Create simple wiki filename
              wiki_filename=$(echo "$title" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-' | sed 's/-\+/-/g' | sed 's/^-\|-$//g')
              if [ -z "$wiki_filename" ]; then
                wiki_filename=$(basename "$md_file" .md | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-')
              fi
              
              # Copy the file to wiki
              cp "$md_file" "wiki/${wiki_filename}.md"
              
              # Add to index
              echo "  - [$title]($wiki_filename)" >> wiki/Home.md
              ((file_count++))
            done
            
            # Find and process all subdirectories
            for subdir in $(find "$source_dir" -type d | sort); do
              # Skip the source directory itself
              if [ "$subdir" = "$source_dir" ]; then
                continue
              fi
              
              # Skip hidden directories
              if [[ $(basename "$subdir") == .* ]]; then
                continue
              fi
              
              # Calculate relative path and depth for indentation
              rel_path=${subdir#"$source_dir/"}
              # Count slashes to determine depth
              depth=$(echo "$rel_path" | tr -cd '/' | wc -c)
              indent=$((depth + 1))
              indent_spaces=$((indent * 2))
              
              # Add directory name to index
              spaces=$(printf '%*s' $indent_spaces '')
              dir_name=$(basename "$subdir")
              echo "${spaces}- **${dir_name}**" >> wiki/Home.md
              
              # Process markdown files in this subdirectory
              shopt -s nullglob
              for md_file in "$subdir"/*.md; do
                shopt -u nullglob
                # Check if the glob expanded to an actual file
                if [ ! -f "$md_file" ]; then
                  continue
                fi
                
                filename=$(basename "$md_file")
                # Skip files starting with underscore or dot
                if [[ "$filename" == _* || "$filename" == .* ]]; then
                  continue
                fi
                
                echo "Processing file: $md_file"
                
                # Try to extract title from first heading
                title=$(grep -m 1 "^# " "$md_file" | sed 's/^# //')
                # If no title found, use filename
                if [ -z "$title" ]; then
                  title=$(basename "$md_file" .md | tr '-_' ' ' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2))}1')
                fi
                
                # Create simple wiki filename
                wiki_filename=$(echo "$title" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-' | sed 's/-\+/-/g' | sed 's/^-\|-$//g')
                if [ -z "$wiki_filename" ]; then
                  wiki_filename=$(basename "$md_file" .md | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-')
                fi
                
                # Copy the file to wiki
                cp "$md_file" "wiki/${wiki_filename}.md"
                
                # Add to index with proper indentation
                child_spaces=$(printf '%*s' $((indent_spaces + 2)) '')
                echo "${child_spaces}- [$title]($wiki_filename)" >> wiki/Home.md
                ((file_count++))
              done
            done
            
            echo "" >> wiki/Home.md
          done
          
          # Update stats in the file
          sed -i "3s/.*/*Generated from ${file_count} markdown files across ${dir_count} directories.*/" wiki/Home.md
          
          # Create sidebar
          cp wiki/Home.md wiki/_Sidebar.md
          
          echo "Wiki generation complete. Processed $file_count files from $dir_count directories."

      - name: Push to Wiki
        working-directory: wiki
        run: |
          git add .
          # Only commit and push if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update wiki from docs and notes directories"
            git push "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          fi
