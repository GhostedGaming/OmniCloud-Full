name: Generate GitHub Wiki

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'notes/**'
      - 'Docs/**'
      - 'Notes/**'
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # We need the full history for accurate timestamps

      # No Python dependencies needed for shell script

      - name: Clone Wiki Repository
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git clone "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: Generate Wiki Content
        run: |
          # Enable error tracing
          set -x

          echo "Starting Wiki Generator..."
          
          # Find source directories (case insensitive)
          declare -a source_dirs
          for dir in docs notes Docs Notes; do
            if [ -d "$dir" ]; then
              source_dirs+=("$dir")
              echo "Found source directory: $dir"
              # List contents of directory to verify structure
              echo "Contents of $dir:"
              ls -la "$dir"
            fi
          done
          
          if [ ${#source_dirs[@]} -eq 0 ]; then
            echo "No docs or notes directories found. Exiting."
            exit 0
          fi
          
          # Initialize index content
          index_content="# Wiki Index\\n\\n"
          total_files=0

          echo "Setting up shell options"
          # Set shell options for safer file handling
          shopt -s nullglob

          echo "Defining process_directory function"
          # Define the process_directory function outside the loop
          process_directory() {
            echo "Processing directory: $1 (path: $2, indent: $3)"
            local dir="$1"
            local rel_path="$2"
            local indent="$3"
            
            echo "Looking for .md files in $dir"
            # Process files in the current directory
            for file in "$dir"/*.md; do
              if [ ! -f "$file" ]; then
                echo "No .md files found in $dir"
                break
              fi
              
              echo "Processing file: $file"
              # Skip files starting with underscore or dot
              local filename=$(basename "$file")
              if [[ "$filename" == _* || "$filename" == .* ]]; then
                echo "Skipping file with underscore/dot prefix: $filename"
                continue
              fi
              
              # Extract the title
              echo "Extracting title from $file"
              local title=$(grep -m 1 "^# " "$file" | sed 's/^# //')
              if [ -z "$title" ]; then
                title=$(basename "$file" .md | sed 's/-/ /g' | sed 's/_/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2))}1')
                echo "No heading found, using filename as title: $title"
              else
                echo "Found title: $title"
              fi
              
              # Sanitize the title for the wiki filename
              echo "Sanitizing title for filename"
              local wiki_filename=$(echo "$title" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//')
              if [ -z "$wiki_filename" ]; then
                wiki_filename=$(basename "$file" .md | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
                echo "Empty wiki filename, using sanitized basename: $wiki_filename"
              else
                echo "Wiki filename: $wiki_filename"
              fi
              
              # Process the content - replace internal links
              echo "Processing content and links"
              local content=$(cat "$file")
              echo "File content length: ${#content} characters"
              
              # Write to the wiki file
              echo "Writing to wiki/${wiki_filename}.md"
              echo "$content" > "wiki/${wiki_filename}.md"
              
              # Add to index
              local indent_str=$(printf '%*s' "$indent" '')
              index_content+="${indent_str}- [${title:-$filename}](${wiki_filename})\\n"
              
              ((total_files++))
              echo "Total files processed: $total_files"
            done
            
            echo "Looking for subdirectories in $dir"
            # Process subdirectories
            for subdir in "$dir"/*/; do
              if [ ! -d "$subdir" ]; then
                echo "No subdirectories found in $dir"
                break
              fi
              
              # Skip hidden directories
              local subdir_name=$(basename "${subdir%/}")
              echo "Found subdirectory: $subdir_name"
              if [[ "$subdir_name" == .* ]]; then
                echo "Skipping hidden directory: $subdir_name"
                continue
              fi
              
              # Add directory to index
              local indent_str=$(printf '%*s' "$indent" '')
              index_content+="${indent_str}- **${subdir_name^}**\\n"
              
              # Process subdirectory recursively
              echo "Recursively processing $subdir"
              process_directory "${subdir%/}" "${rel_path}/${subdir_name}" $((indent + 2))
            done
            
            echo "Finished processing directory: $dir"
          }
          
          # Process each source directory
          echo "Starting to process source directories"
          for src_dir in "${source_dirs[@]}"; do
            dir_name=$(basename "$src_dir")
            echo "Processing main directory: $dir_name"
            
            index_content+="## ${dir_name^}\\n\\n"
            
            # Start processing the directory
            process_directory "$src_dir" "" 2
            
            index_content+="\\n"
          done
          
          # Add stats to index
          echo "Finalizing index content"
          final_index="# Wiki Index\\n\\n*Generated from ${total_files} markdown files across ${#source_dirs[@]} directories.*\\n\\n${index_content#*# Wiki Index\\n\\n}"
          
          # Write the Home.md file
          echo "Writing Home.md"
          echo -e "$final_index" > "wiki/Home.md"
          
          # Also create a _Sidebar.md file with the same content
          echo "Writing _Sidebar.md"
          echo -e "$final_index" > "wiki/_Sidebar.md"
          
          echo "Wiki generation complete. Processed $total_files markdown files."
          
          # Reset shell options
          shopt -u nullglob
          
          # Disable error tracing
          set +x

      - name: Push to Wiki
        working-directory: wiki
        run: |
          git add .
          # Only commit and push if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update wiki from docs and notes directories"
            git push "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          fi
