name: Generate GitHub Wiki

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'notes/**'
      - 'Docs/**'
      - 'Notes/**'
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # We need the full history for accurate timestamps

      # No Python dependencies needed for shell script

      - name: Clone Wiki Repository
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git clone "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: Generate Wiki Content
        run: |
          echo "Starting Wiki Generator..."
          
          # Find source directories (case insensitive)
          declare -a source_dirs
          for dir in docs notes Docs Notes; do
            if [ -d "$dir" ]; then
              source_dirs+=("$dir")
              echo "Found source directory: $dir"
            fi
          done
          
          if [ ${#source_dirs[@]} -eq 0 ]; then
            echo "No docs or notes directories found. Exiting."
            exit 0
          fi
          
          # Initialize index content
          index_content="# Wiki Index\n\n"
          total_files=0
          
          # Define the process_directory function outside the loop
          process_directory() {
            local dir="$1"
            local rel_path="$2"
            local indent="$3"
            
            # Process files in the current directory
            shopt -s nullglob  # Handle case of no .md files gracefully
            for file in "$dir"/*.md; do
              # Skip files starting with underscore or dot
              local filename=$(basename "$file")
              if [[ "$filename" == _* || "$filename" == .* ]]; then
                continue
              fi
              
              # Extract the title
              local title=$(grep -m 1 "^# " "$file" | sed 's/^# //')
              if [ -z "$title" ]; then
                title=$(basename "$file" .md | sed 's/-/ /g' | sed 's/_/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2))}1')
              fi
              
              # Sanitize the title for the wiki filename
              local wiki_filename=$(echo "$title" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//')
              if [ -z "$wiki_filename" ]; then
                wiki_filename=$(basename "$file" .md | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
              fi
              
              # Process the content - replace internal links
              local content=$(cat "$file")
              # Replace markdown links to other .md files
              content=$(echo "$content" | sed -E 's/\[([^]]+)\]\(([^)]+\.md)([^)]*)\)/[\1](\2)/')
              # Remove the .md extension from links
              content=$(echo "$content" | sed -E 's/\[([^]]+)\]\(([^)]+)\.md([^)]*)\)/[\1](\2\3)/')
              
              # Write to the wiki file
              echo "$content" > "wiki/${wiki_filename}.md"
              
              # Add to index
              local indent_str=$(printf '%*s' "$indent" '')
              index_content+="${indent_str}- [${title:-$filename}](${wiki_filename})\n"
              
              ((total_files++))
            done
            shopt -u nullglob
            
            # Process subdirectories
            shopt -s nullglob
            for subdir in "$dir"/*/; do
              # Skip hidden directories
              local subdir_name=$(basename "${subdir%/}")
              if [[ "$subdir_name" == .* ]]; then
                continue
              fi
              
              # Add directory to index
              local indent_str=$(printf '%*s' "$indent" '')
              index_content+="${indent_str}- **${subdir_name^}**\n"
              
              # Process subdirectory recursively
              process_directory "${subdir%/}" "${rel_path}/${subdir_name}" $((indent + 2))
            done
            shopt -u nullglob
          }
          
          # Process each source directory
          for src_dir in "${source_dirs[@]}"; do
            dir_name=$(basename "$src_dir")
            echo "Processing directory: $dir_name"
            
            index_content+="## ${dir_name^}\n\n"
            
            # Start processing the directory
            process_directory "$src_dir" "" 2
            
            index_content+="\n"
          done
          
          # Add stats to index
          index_content=$(echo -e "# Wiki Index\n\n*Generated from ${total_files} markdown files across ${#source_dirs[@]} directories.*\n\n${index_content#*# Wiki Index\n\n}")
          
          # Write the Home.md file
          echo -e "$index_content" > "wiki/Home.md"
          
          # Also create a _Sidebar.md file with the same content
          echo -e "$index_content" > "wiki/_Sidebar.md"
          
          echo "Wiki generation complete. Processed $total_files markdown files."

      - name: Push to Wiki
        working-directory: wiki
        run: |
          git add .
          # Only commit and push if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update wiki from docs and notes directories"
            git push "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          fi
