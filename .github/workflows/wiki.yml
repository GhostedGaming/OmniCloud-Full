name: Generate GitHub Wiki

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'notes/**'
      - 'Docs/**'
      - 'Notes/**'
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # We need the full history for accurate timestamps
      
      # No Python dependencies needed for shell script

      - name: Clone Wiki Repository
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git clone "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: Generate Wiki Content
        run: |
          # Create simple script file
          cat > generate-wiki.sh << 'EOF'
          #!/bin/bash
          
          # Stop on errors
          set -e
          
          echo "Starting Wiki Generator..."
          
          # Find source directories (case insensitive)
          DIRS=()
          for DIR in docs notes Docs Notes; do
            if [ -d "$DIR" ]; then
              DIRS+=("$DIR")
              echo "Found directory: $DIR"
            fi
          done
          
          if [ ${#DIRS[@]} -eq 0 ]; then
            echo "No docs or notes directories found. Exiting."
            exit 0
          fi
          
          TOTAL_FILES=0
          
          # Create Home.md with header
          echo "# Wiki Index" > wiki/Home.md
          echo "" >> wiki/Home.md
          
          # Process each directory
          for SOURCE_DIR in "${DIRS[@]}"; do
            DIR_NAME=$(basename "$SOURCE_DIR")
            echo "Processing directory: $DIR_NAME"
            
            # Add section header to Home.md
            echo "## ${DIR_NAME^}" >> wiki/Home.md
            echo "" >> wiki/Home.md
            
            # Create a temporary directory list file
            find "$SOURCE_DIR" -type d | sort > temp_dir_list.txt
            
            # Process each directory
            while read -r DIR; do
              # Skip the root source directory itself (already processed)
              if [ "$DIR" = "$SOURCE_DIR" ]; then
                continue
              fi
              
              # Skip hidden directories
              if [[ $(basename "$DIR") == .* ]]; then
                continue
              fi
              
              # Calculate the relative path for indentation
              REL_PATH=${DIR#"$SOURCE_DIR/"}
              DEPTH=$(echo "$REL_PATH" | tr -cd '/' | wc -c)
              INDENT=$((DEPTH * 2 + 2))
              
              # Add directory to index
              printf "%*s- **%s**\n" $INDENT "" "$(basename "$DIR")" >> wiki/Home.md
            done < temp_dir_list.txt
            
            # Find all markdown files
            find "$SOURCE_DIR" -name "*.md" | sort > temp_file_list.txt
            
            # Process each file
            while read -r FILE; do
              # Skip files starting with underscore or dot
              FILENAME=$(basename "$FILE")
              if [[ "$FILENAME" == _* || "$FILENAME" == .* ]]; then
                continue
              fi
              
              echo "Processing file: $FILE"
              
              # Calculate the directory depth for indentation
              REL_DIR=$(dirname "${FILE#"$SOURCE_DIR/"}")
              if [ "$REL_DIR" = "." ]; then
                # File is in the root of the source directory
                INDENT=2
              else
                DEPTH=$(echo "$REL_DIR" | tr -cd '/' | wc -c)
                INDENT=$((DEPTH * 2 + 2))
              fi
              
              # Extract title from file content or use filename
              TITLE=$(grep -m 1 "^# " "$FILE" | sed 's/^# //')
              if [ -z "$TITLE" ]; then
                TITLE=$(basename "$FILE" .md | sed 's/-/ /g' | sed 's/_/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2))}1')
              fi
              
              # Create wiki filename
              WIKI_FILENAME=$(echo "$TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//')
              if [ -z "$WIKI_FILENAME" ]; then
                WIKI_FILENAME=$(basename "$FILE" .md | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
              fi
              
              # Copy file to wiki
              cp "$FILE" "wiki/${WIKI_FILENAME}.md"
              
              # Add to index
              printf "%*s- [%s](%s)\n" $INDENT "" "$TITLE" "$WIKI_FILENAME" >> wiki/Home.md
              
              ((TOTAL_FILES++))
            done < temp_file_list.txt
            
            # Add spacing after section
            echo "" >> wiki/Home.md
          done
          
          # Add stats to the top of the index
          sed -i "1a\\
          *Generated from ${TOTAL_FILES} markdown files across ${#DIRS[@]} directories.*\\
          " wiki/Home.md
          
          # Copy Home.md to _Sidebar.md
          cp wiki/Home.md wiki/_Sidebar.md
          
          # Clean up temp files
          rm -f temp_dir_list.txt temp_file_list.txt
          
          echo "Wiki generation complete. Processed $TOTAL_FILES markdown files."
          EOF
          
          # Make the script executable and run it
          chmod +x generate-wiki.sh
          ./generate-wiki.sh

      - name: Push to Wiki
        working-directory: wiki
        run: |
          git add .
          # Only commit and push if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update wiki from docs and notes directories"
            git push "https://${{ github.actor }}:${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          fi
